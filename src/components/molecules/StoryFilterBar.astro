---
// src/components/molecules/StoryFilterBar.astro
interface Props {
  tags: string[];
  selectedTag: string;
}
const { tags, selectedTag } = Astro.props as Props;
---

<style>
  .filter-bar   { @apply mb-6 flex flex-col sm:flex-row items-center gap-4 bg-[#112240] p-4 rounded; }
  .filter-label { @apply text-white font-medium; }
  .filter-select{ @apply bg-gray-700 text-white px-2 py-1 rounded; }
  .keyword-input{ @apply flex-1 bg-gray-700 text-white p-2 rounded min-w-[150px]; }
</style>

<div class="filter-bar">
  <label class="filter-label flex items-center gap-2">
    タグ:
    <select id="tag-select" class="filter-select">
      <option value="">全て</option>
      {tags.map(t => (
        <option value={t} selected={t === selectedTag}>{t}</option>
      ))}
    </select>
  </label>

  <input
    id="keyword-input"
    class="keyword-input"
    placeholder="キーワード検索…"
  />
</div>

<script is:inline>
document.addEventListener('DOMContentLoaded', () => {
  const tagSel  = /** @type {HTMLSelectElement} */ (document.getElementById('tag-select'));
  const kwInput = /** @type {HTMLInputElement } */ (document.getElementById('keyword-input'));

  // URL から初期 q を復元
  const qs = new URLSearchParams(location.search);
  kwInput.value = qs.get('q') || '';

  /** 常に最新のカード NodeList を返す */
  const getCards = () => Array.from(
    document.querySelectorAll('#story-cards .card')
  );

  function filter() {
    const tag = tagSel.value;
    const kw  = kwInput.value.trim().toLowerCase();

    // URL 同期
    const p = new URLSearchParams(location.search);
    tag ? p.set('tag', tag) : p.delete('tag');
    kw  ? p.set('q',   kw) : p.delete('q');
    p.set('page', '1');                       // 検索時は 1 ページ目に戻す
    history.replaceState(null, '', `?${p}`);

    // カードごとに判定
    getCards().forEach(card => {
      const tags  = (card.dataset.tags || '').split(',');
      const title = (card.querySelector('h3')?.textContent || '').toLowerCase();
      const okTag = !tag || tags.includes(tag);
      const okKw  = !kw || title.includes(kw);
      card.style.display = okTag && okKw ? '' : 'none';
    });
  }

  tagSel.addEventListener('change', filter);
  kwInput.addEventListener('input',  filter);
  filter();          // 初回適用
});
</script>