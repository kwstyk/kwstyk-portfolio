---
import stories from '@/data/stories.json';
import { getCollection } from 'astro:content';

const proofs = await getCollection('proofs');
const proofCount = proofs.length;
// ✅ Story数カウント（hidden !== true）
const storyCount = stories.filter(s => s.hidden !== true).length;

// ✅ CI成功率の計算
const ciPassed = proofs.filter(p => p.data.ci_status?.includes('passing')).length;
const ciRate = proofCount === 0 ? 0 : Math.round((ciPassed / proofCount) * 100);
---

<div class="stats-bar flex flex-col sm:flex-row justify-center items-center gap-4 sm:gap-12 mt-8 text-lg text-center sm:text-left">
  <div>
    <span class="count font-mono text-[var(--accent)] transition-colors" data-value={proofCount}>0</span>
    <span class="text-gray-400"> Proofs</span>
  </div>
  <div>
    <span class="count font-mono text-[var(--accent)] transition-colors" data-value={storyCount}>0</span>
    <span class="text-gray-400"> Stories</span>
  </div>
  <div>
    <span class="count font-mono text-[var(--accent)] transition-colors" data-value={ciRate}>0</span>
    <span class="text-gray-400"> CI Pass %</span>
  </div>
</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const elements = document.querySelectorAll('.count');
    elements.forEach(el => {
      const target = parseInt(el.dataset.value);
      const duration = 1000;
      const steps = 30;
      const interval = duration / steps;
      let count = 0;
      const increment = Math.ceil(target / steps);

      const timer = setInterval(() => {
        count += increment;
        if (count >= target) {
          el.textContent = target;
          el.classList.remove('text-[var(--accent)]');
          el.classList.add('text-green-500'); // ✅ カウント終了後に色変更
          clearInterval(timer);
        } else {
          el.textContent = count;
        }
      }, interval);
    });
  });
</script>
