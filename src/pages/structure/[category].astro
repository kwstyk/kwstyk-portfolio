---
// src/pages/structure/[category].astro

import '@/styles/structure.css';
import Layout     from '../../layouts/Layout.astro';
import categories from '../../data/categories.json';

import Card      from '../../components/molecules/Card.astro';
import ProofList from '../../components/molecules/ProofList.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

export const prerender = true;

export async function getStaticPaths() {
  return categories.map((cat) => ({
    params: { category: cat.slug },
    props:  { category: cat },
  }));
}

interface Props {
  category: {
    slug:        string;
    title:       string;
    description: string;
    icon?:       string;
    color?:      string;
  };
}
const { category } = Astro.props as Props;

// ■ descriptions コレクションから Intro を取得
//  ファイル構成: src/content/descriptions/structure/<slug>/intro.md
const descEntries = await getCollection('descriptions');
const introEntry = descEntries.find(
  (e) => e.id.endsWith(`structure/${category.slug}/intro.md`)
);
const { Content: Intro } = introEntry
  ? await introEntry.render()
  : { Content: null };

// ——— Proof 一覧取得 ———
const allProofs: CollectionEntry<'proofs'>[] = await getCollection('proofs');
const entries = allProofs.filter(p => p.data.category === category.slug);
---

<Layout siteName="KWSTYK Portfolio" pageTitle={`${category.title} | Structure`}>
  <!-- ヘッダー -->
  <header class="mb-6">
    <h1 class="text-2xl font-bold flex items-center gap-2 whitespace-nowrap">
      {category.icon && <span class="text-3xl">{category.icon}</span>}
      {category.title}
    </h1>
    <p class="text-text/75 mt-1">{category.description}</p>
    <p class="text-sm text-gray-400 mt-2">
      全 Proof: <span class="font-medium text-blue-400">{entries.length}</span> 件
    </p>
  </header>

<!-- Intro セクション -->
{Intro && (
  <section class="mb-12 prose prose-invert">
    <Intro />
  </section>
)}
  <!-- 最新の更新セクション -->
  <h3 class="text-lg font-semibold mt-8 mb-4">
    最新の更新&nbsp;
    <span class="font-medium text-blue-400">{Math.min(5, entries.length)}</span> 件
  </h3>
  <ProofList categorySlug={category.slug} type="latest" count={5}
    class="mt-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4" />

  <!-- 人気のProofセクション -->
  <h3 class="text-lg font-semibold mt-10 mb-4">
    人気のProof&nbsp;
    <span class="font-medium text-green-400">{Math.min(5, entries.length)}</span> 件
  </h3>
  <ProofList categorySlug={category.slug} type="popular" count={5}
    class="mt-6 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4" />

  <!-- 全 Proof グリッド -->
  <section class="card-grid">
    {entries.map(entry => (
      <Card
        title={entry.data.title}
        description={entry.data.description}
        href={`/proof/${entry.id.replace(/\.mdx?$/, '')}`}
        icon={entry.data.icon}
        badge={entry.data.badge}
        color={category.color}
        difficulty={entry.data.difficulty}
        repro={entry.data.repro}
        updated={entry.data.updated}
      />
    ))}
    {Array.from({ length: 2 }).map((_, idx) => (
      <Card
        key={idx}
        title="Coming Soon"
        description="ただいま準備中です"
        href="#"
        badge=""
        color="var(--accent)"
        class="opacity-50 pointer-events-none"
      />
    ))}
  </section>
</Layout>
