---
export const prerender = true;

import '@/styles/structure.css';
import Layout     from '../../layouts/Layout.astro';
import categories from '../../data/categories.json';

import Card      from '../../components/molecules/Card.astro';
import ProofList from '../../components/molecules/ProofList.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// ■ getStaticPaths: カテゴリごとのページを静的生成
export async function getStaticPaths() {
  return categories.map((cat) => ({
    params: { category: cat.slug },   // URL の [category] に slug を当てはめる
    props:  { category: cat },        // ページ内で使う props
  }));

  
}  // ← ここが必須。忘れると Astro がこの関数を読み飛ばします

interface Props {
  category: {
    id:          string;
    slug:        string;
    title:       string;
    description: string;
    color?:      string;
    icon?:       string;
    badge?:      string;
  };
}

// Astro.props から category データを取得
const { category } = Astro.props as Props;

// ■ Intro.md を動的インポート（無くてもエラーにならない）
const introModules = import.meta.glob<{
  default: any;
}>(
  '/src/content/descriptions/structure/*/intro.md',
  { eager: true, query: '?astro' }
);
const key = `/src/content/descriptions/structure/${category.slug}/intro.md`;
const Intro = introModules[key]?.default ?? null;

// ■ このカテゴリに属する Proof 一覧を取得
const allProofs: CollectionEntry<'proofs'>[] = await getCollection('proofs');
const entries: CollectionEntry<'proofs'>[] = allProofs.filter(
  (p) => p.data.category === category.slug
);
---

<Layout
  siteName="KWSTYK Portfolio"
  pageTitle={`${category.title} | Structure`}
>
  <!-- ヘッダー -->
  <header class="mb-6">
    <h1 class="text-2xl font-bold flex items-center gap-2">
      {category.icon && <span class="text-3xl">{category.icon}</span>}
      {category.title}
    </h1>
    <p class="text-text/75 mt-1">{category.description}</p>
  </header>

  <!-- Intro セクション -->
  {Intro && (
    <section class="mb-12">
      <Intro />
    </section>
  )}

  <!-- 小カード一覧 -->
  <ProofList categorySlug={category.slug} class="mt-12" />

  <!-- 大カードグリッド -->
  <section class="card-grid">
    {entries.map((entry) => (
      <Card
        title={entry.data.title}
        description={entry.data.description}
        href={`/proof/${entry.id.replace(/\.mdx?$/, '')}`}
        icon={entry.data.icon}
        badge={entry.data.badge}
        color={category.color}
        difficulty={entry.data.difficulty}
        repro={entry.data.repro}
        updated={entry.data.updated}
      />
    ))}

    {/* 空きスペース用ダミーカード */}
    {Array.from({ length: 2 }).map((_, idx) => (
      <Card
        key={idx}
        title="Coming Soon"
        description="ただいま準備中です"
        href="#"
        badge=""
        color="var(--accent)"
        class="opacity-50 pointer-events-none"
      />
    ))}
  </section>
</Layout>
