---
// src/pages/story/index.astro

import Layout          from '@/layouts/Layout.astro';
import Hero            from '@/components/organisms/Hero.astro';
import StoryFilterBar  from '@/components/molecules/StoryFilterBar.astro';
import StoryCard       from '@/components/molecules/StoryCard.astro';
import Pagination      from '@/components/molecules/Pagination.astro';
import storiesJson     from '@/data/stories.json';

interface Story {
  id: string;
  source: string;
  title: string;
  summary: string;
  url: string;
  tags?: string[];
  published: string;
  hidden?: boolean;
}
const stories = (storiesJson as unknown) as Story[];

// URL から tag／page を取得
const selectedTag = Astro.url.searchParams.get('tag') ?? '';
const page        = Number(Astro.url.searchParams.get('page') ?? '1');
const perPage     = 6;

// hidden を外してタグ絞り込み
const filtered = stories.filter(
  s => !s.hidden && (selectedTag === '' || (s.tags ?? []).includes(selectedTag))
);

// ページャー用の集計
const totalItems = filtered.length;
const totalPages = Math.ceil(totalItems / perPage);
const paged      = filtered.slice((page - 1) * perPage, page * perPage);

// ドロップダウン用の全タグリスト
const allTags = Array.from(new Set(stories.flatMap(s => s.tags ?? [])));
---

<Layout class="page-background">
  <Hero title="Lab Notes" subtitle="～Proof から得た知見～" />

  <!-- StoryFilterBar を使ってタグ絞り込み -->
  <StoryFilterBar
    tags={allTags}
    selectedTag={selectedTag}
  />

  <!-- 記事グリッド -->
  <section
    id="story-cards"
    class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 mt-8"
  >
    {paged.map((s) => (
      <StoryCard
        title={s.title}
        summary={s.summary}
        url={s.url}
        source={s.source}
        published={s.published}
        tags={s.tags}
      />
    ))}
  </section>

  <!-- ページャー（タグ選択を引き継いでページ遷移） -->
  <Pagination
    totalItems={totalItems}
    itemsPerPage={perPage}
    currentPage={page}
    totalPages={totalPages}
    selectedTag={selectedTag}
    getPageHref={(p: number) =>
      `?tag=${encodeURIComponent(selectedTag)}&page=${p}`
    }
  />
</Layout>
